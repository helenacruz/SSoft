package tecnico.ssoft.phpsat.core;

import java.util.List;
import java.util.ArrayList;

public abstract class Vulnerability
{
    private List<String> _entryPoints;
    private List<String> _sanitizationFunctions;
    private List<String> _sinks;

    public Vulnerability()
    {
        _entryPoints = new ArrayList<String>();
        _sanitizationFunctions = new ArrayList<String>();
        _sinks = new ArrayList<String>();
    }

    public Vulnerability(List<String> entryPoints, List<String> sanitizationFunctions, List<String> sinks)
    {
        _entryPoints = entryPoints;
        _sanitizationFunctions = sanitizationFunctions;
        _sinks = sinks;
    }

    public List<String> getEntryPoints()
    {
        return _entryPoints;
    }

    public List<String> getSanitizationFunctions()
    {
        return _sanitizationFunctions;
    }

    public List<String> getSinks()
    {
        return _sinks;
    }

    public void setEntryPoints(List<String> entryPoints)
    {
        _entryPoints = entryPoints;
    }

    public void setSanitizationFunctions(List<String> sanitizationFunctions)
    {
        _sanitizationFunctions = sanitizationFunctions;
    }

    public void setSinks(List<String> sinks)
    {
        _sinks = sinks;
    }

    public void addEntryPoint(String entryPoint)
    {
        _entryPoints.add(entryPoint);
    }

    public void addSanitizationFunction(String sanitizationFunction)
    {
        _sanitizationFunctions.add(sanitizationFunction);
    }

    public void addSink(String sink)
    {
        _sinks.add(sink);
    }

    public abstract String type(); // type of vulnerability

    public String entryPointsToString()
    {
        String res = "";

        for (String entryPoint : _entryPoints) {
            res += entryPoint + ",";
        }

        return res.substring(0, res.length() - 1); // deletes the last ,
    }

    public String sanitizationFunctionsToString()
    {
        String res = "";

        for (String sanitizationFunction : _sanitizationFunctions) {
            res += sanitizationFunction + ",";
        }

        return res.substring(0, res.length() - 1); // deletes the last ,
    }

    public String sinksToString()
    {
        String res = "";

        for (String sink : _sinks) {
            res += sink + ",";
        }

        return res.substring(0, res.length() - 1); // deletes the last ,
    }
}
